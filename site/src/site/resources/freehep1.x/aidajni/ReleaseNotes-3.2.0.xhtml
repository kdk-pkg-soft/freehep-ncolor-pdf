<html>

<head>
<meta http-equiv="Content-Type" content="text/html; charset=windows-1252">
<meta name="GENERATOR" content="Microsoft FrontPage 6.0">
<meta name="ProgId" content="FrontPage.Editor.Document">
<title>Release Notes</title>
</head>

<body>

<h1>AIDAJNI 3.2.0 Release Notes</h1>
<p><font size="2">Release Notes Version: $Revision: 1.4 $.</font></p>
<p><font size="2">The most recent version of this file is available
<a href="http://java.freehep.org/aidajni/ReleaseNotes-3.2.0.html">here</a>.<br>
Release notes for all versions of AIDAJNI are available
<a href="http://java.freehep.org/aidajni/AllReleaseNotes.html">here</a>.</font></p>
<p>AIDAJNI is a C++ adapter of <a href="http://aida.freehep.org/">AIDA - 
Abstract Interfaces for Data Analysis</a> which connects to a Java 
implementation of AIDA, such as <a href="http://java.freehep.org/jaida">JAIDA</a>.</p>
<p>AIDAJNI allows C++ programmers to use any Java AIDA implementation. </p>
<p>It allows for instance <a href="http://geant4.cern.ch/geant4">Geant4</a>, written in 
C++, to create histograms and ntuples in Java and store them in .aida files, 
which can be analyzed using
<a href="http://jas.freehep.org/jas3/index.html">JAS3 - Java Analysis Studio</a>.</p>
<h2>Contents</h2>
<ul>
  <li><a href="#Compliance">AIDA Compliance</a></li>
  <li><a href="#Platforms">Supported Platforms</a></li>
  <li><a href="#Changes">Major changes in AIDAJNI 3.2.0</a></li>
  <li><a href="#Documentation">Documentation</a></li>
  <li><a href="#License">License</a></li>
  <li><a href="#Installation">Installing AIDJNI</a></li>
  <li><a href="#Compilation">Compiling AIDAJNI</a></li>
  <li><a href="#Building">Building an Application with AIDAJNI</a></li>
  <li><a href="#Running">Running an Application with AIDAJNI</a></li>
  <li><a href="#Geant4">Using AIDAJNI from Geant4</a></li>
  <li><a href="#Features">Features/Limitations of the Current Release</a></li>
  <li><a href="#BugReporting">Reporting Bugs</a></li>
  <li><a href="#Examples">Examples</a></li>
</ul>
<h2><a name="Compliance">AIDA Compliance</a></h2>
<p>This adapter connects AIDA-C++ to AIDA-JNI. It almost fully supports the AIDA 
standard. The C++ and Java side are both AIDA 3.2.1 compliant (for usage in Geant 4.6.x).</p>
<h2><a name="Platforms">Supported Platforms</a></h2>
<p>Binaries are available and supported for the following combinations of 
architectures and compilers:</p>
<ul>
  <li>Windows NT/2000/XP<ul>
    <li><b>WIN32-VC</b>: Visual Studio 6.0 Enterprise Edition, Service Pack 5.<br>
    Microsoft (R) 32-bit C/C++ Optimizing Compiler Version 12.00.8804 
for 80x86</li>
    <li><b>WIN32-VC7</b>: Visual Studio .NET Professional 2003.<br>
    Microsoft (R) 32-bit C/C++ Optimizing Compiler Version 
    13.10.3077 for 80x86</li>
  </ul>
  </li>
  <li>Linux<ul>
    <li><b>Linux-g++2</b>: gcc version 2.95.3 20010315 (release)</li>
    <li><b>Linux-g++3</b>: gcc version 3.2.2</li>
  </ul>
  </li>
  <li>MacOS X<ul>
    <li><b>Darwin-g++2</b>: Apple Computer, Inc. version gcc-7, based on gcc version 
2.95.2 19991024 (release)</li>
    <li><b>Darwin-g++3</b>: Apple Computer, Inc. GCC version 1175, based on gcc version 
3.1 20020420 (prerelease)</li>
  </ul>
  </li>
  <li>SUN Solaris<ul>
    <li><b>SUN-CC</b>: CC: Sun WorkShop 6 update 1 C++ 5.2 Patch 109508-03 2001/04/07</li>
  </ul>
  </li>
</ul>
<h2><a name="Changes">Major changes in AIDAJNI 3.2.0</a></h2>
<ul>
  <li>Implementation is almost fully compliant with AIDA 3.2.1.</li>
  <li>Passed AIDA C++ Test cases, which were modified to be AIDA 3.2.1 compliant.</li>
  <li><b>Experimental</b>: Interoperability for IAxis, IAnnotation, 
  IHistogram1D, 2D and 3D, ICloud1D, 2D and 3D, and IProfile1D and 2D. You can create objects of those 
  classes using a pure C++ implementation and pass them to JAIDA using AIDAJNI.</li>
</ul>
<p><font size="2">For a full list of changes in AIDAJNI 3.2.0 see the
<a href="http://java.freehep.org/redirect?project=AIDAJNI&area=bugs&report=changelog">AIDAJNI
change log</a>.<br>
For a full list of changes in  AIDA 3.2.1 see the
<a href="http://aida.freehep.org/releaseNotes.thtml">AIDA change 
log</a>.</font></p>
<h2><a name="Documentation">Documentation</a></h2>
<p>These release notes list issues specific to the AIDAJNI implementation of AIDA. 
In general all of the AIDA documentation applies to AIDAJNI, in particular the 
following are useful:</p>
<ul>
  <li><a href="http://aida.freehep.org/doc/v3.2.1/UsersGuide.html">AIDA 
  3.2.1 Users' Guide</a></li>
  <li><a href="http://aida.freehep.org/doc/v3.2.1/api/index.html">AIDA 3.2.1 API 
  documentation</a></li>
</ul>
<h2><a name="License">License</a></h2>
<p>AIDAJNI is part of the <a href="http://java.freehep.org/">FreeHEP Java Library</a> 
an &quot;Open Source&quot; library distributed under the terms of the
<a href="http://www.gnu.org/copyleft/lesser.html">LGPL</a>. If you have 
questions about the licensing please send a mail to:
<a href="mailto:developers@freehep.org">developers@freehep.org</a>.</p>
<h2><a name="Installation">Installin</a>g AIDAJNI</h2>
<p>Download and install a Java AIDA Implementation which supports AIDA 3.2.1, for 
example <a href="http://java.freehep.org/jaida">JAIDA</a>.</p>

<p>Download AIDAJNI for one or more platforms. These distributions overlay on 
top of each other, adding support for different architectures. The distribution 
creates the following directory structure:</p>

<pre>AIDAJNI-version            containing license and release notes
AIDAJNI-version/bin        containing platform specific directories with setup scripts
AIDAJNI-version/examples   containing examples
AIDAJNI-version/include    containing all necessary include files
AIDAJNI-version/lib        containing platform specific directories with libraries
                           (shareable and static)</pre>
<h2><a name="Compilation">Compilation</a></h2>
<p>The current distributions do not contain source files.  </p>
<p>To (re-)build AIDAJNI for a 
particular platform you need to get AIDAJNI-3.2.0-src.zip or .tar.gz file from 
the <a href="ftp://ftp.slac.stanford.edu/software/freehep/AIDAJNI/v3.2.0/">
ftp://ftp.slac.stanford.edu/software/freehep/AIDAJNI/v3.2.0/</a> directory. </p>
<p>Follow the instructions in README-src.html contained in that 
distribution.</p>
<h2><a name="Building">Building</a> an Application with AIDAJNI</h2>
<p>Set the environment variable AIDAJNI_HOME to your unpacked AIDAJNI 
distribution. Make sure JDK_HOME is set to your Java Development Kit (1.4 or 
better), and source the system specific aidajni-setup file (.sh/.csh fro Unix, 
.bat for Windows, .win32 for Cygwin).</p>
<p>Example for Linux-g++3, using tcsh:</p>
<blockquote>
  <pre>setenv AIDAJNI_HOME /users/tom/AIDAJNI-3.2.0
setenv JDK_HOME /users/tom/j2sdk1.4.1
source $AIDAJNI_HOME/bin/Linux-g++3/aidajni-setup.csh</pre>
</blockquote>
<p>Now you are able to execute the aida-config utility:</p>
<blockquote>
  <pre>aida-config --version	will display the version you installed.
aida-config --include 	will display the include options 
                        for your compiler.
aida-config --lib 	will display the library link options 
                        for your linker.</pre>
</blockquote>
<p>To compile (example for Linux-g++3): </p>
<blockquote>
  <pre>g++ -c `aida-config --include` YourApplication.cc
g++ YourApplication.o `aida-config --lib`</pre>
</blockquote>
<h2><a name="Running">Running</a> an Application with AIDAJNI</h2>
<p>Once you have run the aidajni-setup script successfully you can just execute 
your application.</p>

<h2><a name="Geant4">Using AIDAJNI from Geant4</a></h2>

<p>For <b>Geant4 version 4.5.x</b> use AIDAJNI 3.0.4 and its Geant4 overlay 
product. See <a href="ReleaseNotes-3.0.4.html">ReleaseNotes</a> of version 
3.0.4.</p>

<p>For <b>Geant4 version 4.6.x</b> the fixes to the A01 example and the overlay 
are included in the Geant4 release. One only needs to install JAIDA and AIDAJNI 
as described above.</p>

<p><b>IMPORTANT</b>: Make sure you do <b>not</b> link in OPENGL libraries since they pre-load
libXt.so, which will make the JavaVM crash when it tries to open its first Window/Frame.
This does NOT apply to the Windows Operating System of course. This bug was
reported to Sun Microsystems as early as JDK 1.3.1, but will not be fixed until
JDK 1.5 comes out.
Bugnumber <a href="http://developer.java.sun.com/developer/bugParade/bugs/4638291.html">4638291</a></p>

<h2><a name="Features">Features/Limitations of the Current Release</a></h2>
<p>The following limitations exist:</p>
<ul>
  <li>On MacOS X the loading of the AWT library seems to fail. This causes the 
  default Plotter not to work. You need to use the DummyPlotter which is 
  included in the BatchAnalysisFactory. To do so, set the environment variable<pre>setenv JVM_ARGS &quot;-Dhep.aida.IAnalysisFactory=hep.aida.ref.BatchAnalysisFactory&quot;</pre>
  <p>to be able to run without plotting. See
  <a href="http://bugs.freehep.org/secure/ViewIssue.jspa?id=11386">AIDAJNI-28</a>.</li>
  <li>On Linux RedHat 9 distribution a program using AIDAJNI will finish with a 
  crash, due to some threading problem in the Linux kernel. You need to set 
  LD_ASSUME_KERNEL 2.4.1 to avoid this crash, until the next kernel is 
  distributed. For more information see
  <a href="http://bugs.freehep.org/secure/ViewIssue.jspa?key=AIDAJNI-5">
  AIDAJNI-5</a> in our bug database.</li>
  <li>There may be memory leaks in some places, but we currently cannot run AIDAJNI through valgrind, since valgrind core dumps on running the Java 
  Virtual Machine.</li>
  <li>Many routines will return references to objects which are ONLY valid until 
  the next<br>
  call to the same routine is made.</li>
  <li>CIxxx.cpp and CIxxx.h classes are currently available for experimental use 
  only. They allow a C++ implementation of an object (Histogram for instance) to 
  be passed to and handled by Java. This will eventually allow a C++ histogram 
  to be plotted by a Java plotter.</li>
  <li>ITree.ls() is not implemented because we would need an ostream connected to 
  an java.io.OutputStream.</li>
  <li>ITuple.fill on ITupleEntry is implemented but will not work.</li>
  <li>ITuple.getObject() will fail if the stored column is not an ITuple.</li>
  <li>ITree.listObjectNames() and ITree.listObjectTypes() return an empty list 
  in case of failure.</li>
  <li>The distribution kits contain some CVS directories and files, please 
  ignore.</li>
</ul>
<h2><a name="BugReporting">Reporting Bugs</a></h2>
<p>For discussion of features or problems related to AIDAJNI please use the
<a href="http://aida.freehep.org/mailing_list.thtml">AIDA mailing lists</a>. To 
report bugs or request enhancements you can also use the
<a href="http://java.freehep.org/redirect?project=AIDAJNI&area=bugs&report=changelog">AIDAJNI bug database</a>.
</p>
<h2><a name="Examples">Examples</a></h2>
<p>The AIDJNI/examples directory contains AidaTest.cc which serves as  a small test as well as an example. 
The subdirectories g++, CC and VC contain build scripts to compile and link 
AidaTest.cc into an executable. JAIDA and AIDAJNI must have been set up before 
running the build script. </p>

<p>The standard AIDATest package in C++ is 
used to test the AIDAJNI adapter. Some minor tweaks are being made to the tests 
and the JAIDA implementation so that all of them will pass, but we believe the AIDAJNI does not 
have major errors in it.</p>

</body>

</html>