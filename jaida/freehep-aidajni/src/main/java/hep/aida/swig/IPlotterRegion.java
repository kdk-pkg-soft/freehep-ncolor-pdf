/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 1.3.31
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package hep.aida.swig;
 
import hep.aida.jni.AIDAJNIUtil;

public class IPlotterRegion implements hep.aida.IPlotterRegion {
  private long swigCPtr;
  protected boolean swigCMemOwn;

  public IPlotterRegion(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(hep.aida.IPlotterRegion obj) {
    if (obj instanceof IPlotterRegion) {
      return (obj == null) ? 0 : ((IPlotterRegion)obj).swigCPtr;
    } else {
      long cPtr = AIDAJNI.new_IPlotterRegion();
      // FIXME, memory leak if Java class gets finalized, since C++ director is not freed.
      AIDAJNI.IPlotterRegion_director_connect(obj, cPtr, true, true);
      return cPtr;
    }
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if(swigCPtr != 0 && swigCMemOwn) {
      swigCMemOwn = false;
      AIDAJNI.delete_IPlotterRegion(swigCPtr);
    }
    swigCPtr = 0;
  }

  protected void swigDirectorDisconnect() {
    swigCMemOwn = false;
    delete();
  }

  public void swigReleaseOwnership() {
    swigCMemOwn = false;
    AIDAJNI.IPlotterRegion_change_ownership(this, swigCPtr, false);
  }

  public void swigTakeOwnership() {
    swigCMemOwn = true;
    AIDAJNI.IPlotterRegion_change_ownership(this, swigCPtr, true);
  }

  public void plot(hep.aida.IBaseHistogram histogram, String options) {
    AIDAJNI.IPlotterRegion_plot__SWIG_0(swigCPtr, this, IBaseHistogram.getCPtr(histogram), (hep.aida.IBaseHistogram)histogram, options);
  }

  public void plot(hep.aida.IBaseHistogram histogram) {
    AIDAJNI.IPlotterRegion_plot__SWIG_1(swigCPtr, this, IBaseHistogram.getCPtr(histogram), (hep.aida.IBaseHistogram)histogram);
  }

  public void plot(hep.aida.IBaseHistogram histogram, hep.aida.IPlotterStyle style, String options) {
    AIDAJNI.IPlotterRegion_plot__SWIG_2(swigCPtr, this, IBaseHistogram.getCPtr(histogram), (hep.aida.IBaseHistogram)histogram, IPlotterStyle.getCPtr(style), (hep.aida.IPlotterStyle)style, options);
  }

  public void plot(hep.aida.IBaseHistogram histogram, hep.aida.IPlotterStyle style) {
    AIDAJNI.IPlotterRegion_plot__SWIG_3(swigCPtr, this, IBaseHistogram.getCPtr(histogram), (hep.aida.IBaseHistogram)histogram, IPlotterStyle.getCPtr(style), (hep.aida.IPlotterStyle)style);
  }

  public void plot(hep.aida.IFunction function, String options) {
    AIDAJNI.IPlotterRegion_plot__SWIG_4(swigCPtr, this, IFunction.getCPtr(function), (hep.aida.IFunction)function, options);
  }

  public void plot(hep.aida.IFunction function) {
    AIDAJNI.IPlotterRegion_plot__SWIG_5(swigCPtr, this, IFunction.getCPtr(function), (hep.aida.IFunction)function);
  }

  public void plot(hep.aida.IFunction function, hep.aida.IPlotterStyle style, String options) {
    AIDAJNI.IPlotterRegion_plot__SWIG_6(swigCPtr, this, IFunction.getCPtr(function), (hep.aida.IFunction)function, IPlotterStyle.getCPtr(style), (hep.aida.IPlotterStyle)style, options);
  }

  public void plot(hep.aida.IFunction function, hep.aida.IPlotterStyle style) {
    AIDAJNI.IPlotterRegion_plot__SWIG_7(swigCPtr, this, IFunction.getCPtr(function), (hep.aida.IFunction)function, IPlotterStyle.getCPtr(style), (hep.aida.IPlotterStyle)style);
  }

  public void plot(hep.aida.IDataPointSet dataPointSet, String options) {
    AIDAJNI.IPlotterRegion_plot__SWIG_8(swigCPtr, this, IDataPointSet.getCPtr(dataPointSet), (hep.aida.IDataPointSet)dataPointSet, options);
  }

  public void plot(hep.aida.IDataPointSet dataPointSet) {
    AIDAJNI.IPlotterRegion_plot__SWIG_9(swigCPtr, this, IDataPointSet.getCPtr(dataPointSet), (hep.aida.IDataPointSet)dataPointSet);
  }

  public void plot(hep.aida.IDataPointSet dataPointSet, hep.aida.IPlotterStyle style, String options) {
    AIDAJNI.IPlotterRegion_plot__SWIG_10(swigCPtr, this, IDataPointSet.getCPtr(dataPointSet), (hep.aida.IDataPointSet)dataPointSet, IPlotterStyle.getCPtr(style), (hep.aida.IPlotterStyle)style, options);
  }

  public void plot(hep.aida.IDataPointSet dataPointSet, hep.aida.IPlotterStyle style) {
    AIDAJNI.IPlotterRegion_plot__SWIG_11(swigCPtr, this, IDataPointSet.getCPtr(dataPointSet), (hep.aida.IDataPointSet)dataPointSet, IPlotterStyle.getCPtr(style), (hep.aida.IPlotterStyle)style);
  }

  public void remove(hep.aida.IBaseHistogram histogram) {
    AIDAJNI.IPlotterRegion_remove__SWIG_0(swigCPtr, this, IBaseHistogram.getCPtr(histogram), (hep.aida.IBaseHistogram)histogram);
  }

  public void remove(hep.aida.IFunction function) {
    AIDAJNI.IPlotterRegion_remove__SWIG_1(swigCPtr, this, IFunction.getCPtr(function), (hep.aida.IFunction)function);
  }

  public void remove(hep.aida.IDataPointSet dataPointSet) {
    AIDAJNI.IPlotterRegion_remove__SWIG_2(swigCPtr, this, IDataPointSet.getCPtr(dataPointSet), (hep.aida.IDataPointSet)dataPointSet);
  }

  public void clear() {
    AIDAJNI.IPlotterRegion_clear(swigCPtr, this);
  }

  public void setParameter(String parameter, String options) {
    AIDAJNI.IPlotterRegion_setParameter__SWIG_0(swigCPtr, this, parameter, options);
  }

  public void setParameter(String parameter) {
    AIDAJNI.IPlotterRegion_setParameter__SWIG_1(swigCPtr, this, parameter);
  }

  public String parameterValue(String parameter) {
    return AIDAJNI.IPlotterRegion_parameterValue(swigCPtr, this, parameter);
  }

  public String[] availableParameterOptions(String parameter) {
    return AIDAJNIUtil.toStringArray(AIDAJNI.IPlotterRegion_availableParameterOptions(swigCPtr, this, parameter));
  }

  public String[] availableParameters() {
    return AIDAJNIUtil.toStringArray(AIDAJNI.IPlotterRegion_availableParameters(swigCPtr, this));
  }

  public hep.aida.IPlotterStyle style() {
    return new IPlotterStyle(AIDAJNI.IPlotterRegion_style(swigCPtr, this), false);
  }

  public void setStyle(hep.aida.IPlotterStyle style) {
    AIDAJNI.IPlotterRegion_setStyle(swigCPtr, this, IPlotterStyle.getCPtr(style), (hep.aida.IPlotterStyle)style);
  }

  public void applyStyle(hep.aida.IPlotterStyle style) {
    AIDAJNI.IPlotterRegion_applyStyle(swigCPtr, this, IPlotterStyle.getCPtr(style), (hep.aida.IPlotterStyle)style);
  }

  public void setTitle(String title) {
    AIDAJNI.IPlotterRegion_setTitle(swigCPtr, this, title);
  }

  public void setXLimits(double min, double max) {
    AIDAJNI.IPlotterRegion_setXLimits__SWIG_0(swigCPtr, this, min, max);
  }

  public void setXLimits(double min) {
    AIDAJNI.IPlotterRegion_setXLimits__SWIG_1(swigCPtr, this, min);
  }

  public void setXLimits() {
    AIDAJNI.IPlotterRegion_setXLimits__SWIG_2(swigCPtr, this);
  }

  public void setYLimits(double min, double max) {
    AIDAJNI.IPlotterRegion_setYLimits__SWIG_0(swigCPtr, this, min, max);
  }

  public void setYLimits(double min) {
    AIDAJNI.IPlotterRegion_setYLimits__SWIG_1(swigCPtr, this, min);
  }

  public void setYLimits() {
    AIDAJNI.IPlotterRegion_setYLimits__SWIG_2(swigCPtr, this);
  }

  public void setZLimits(double min, double max) {
    AIDAJNI.IPlotterRegion_setZLimits__SWIG_0(swigCPtr, this, min, max);
  }

  public void setZLimits(double min) {
    AIDAJNI.IPlotterRegion_setZLimits__SWIG_1(swigCPtr, this, min);
  }

  public void setZLimits() {
    AIDAJNI.IPlotterRegion_setZLimits__SWIG_2(swigCPtr, this);
  }

  public hep.aida.IPlotterLayout layout() {
    return new IPlotterLayout(AIDAJNI.IPlotterRegion_layout(swigCPtr, this), false);
  }

  public void setLayout(hep.aida.IPlotterLayout layout) {
    AIDAJNI.IPlotterRegion_setLayout(swigCPtr, this, IPlotterLayout.getCPtr(layout), (hep.aida.IPlotterLayout)layout);
  }

  public hep.aida.IInfo info() {
    return new IInfo(AIDAJNI.IPlotterRegion_info(swigCPtr, this), false);
  }

  public IPlotterRegion() {
    this(AIDAJNI.new_IPlotterRegion(), true);
    AIDAJNI.IPlotterRegion_director_connect(this, swigCPtr, swigCMemOwn, true);
  }

}
