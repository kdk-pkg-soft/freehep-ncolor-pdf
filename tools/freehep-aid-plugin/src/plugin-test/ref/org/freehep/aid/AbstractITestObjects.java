// AID-GENERATED
// =========================================================================
// This class was generated by AID - Abstract Interface Definition          
// DO NOT MODIFY, but use the org.freehep.aid.Aid utility to regenerate it. 
// =========================================================================

// Copyright 2002, SLAC, Stanford University, U.S.A.
// AID - Compiler Test File
package org.freehep.aid.test;

import java.awt.Color;
import java.io.IOException;
import java.io.OutputStream;

public abstract class AbstractITestObjects implements ITestObjects {

    public abstract String returnObject();

    public abstract String returnReference();

    public abstract String returnPointer();

    public abstract Color returnColor();

    public abstract String returnConstReference();

    public abstract String returnConstReferenceConst();

    public abstract String returnConstReferenceThrows() throws IOException, IllegalArgumentException;

    public abstract String returnConstReferenceConstThrows() throws IllegalArgumentException;

    public abstract String find(String path);

    public abstract ITestInterface find(Color color);

    public boolean cd() {
        return cd("~");
    }
    public abstract boolean cd(String path);

    public void ls() {
        ls(".");
    }
    public void ls(String path) {
        ls(path, false);
    }
    public void ls(String path, boolean recursive) {
        ls(path, recursive, System.out);
    }
    public abstract void ls(String path, boolean recursive, OutputStream os);

    public abstract void mkdir(String path) throws IllegalArgumentException;

    public void mv(String oldPath) {
        mv(oldPath, "dummy");
    }
    public abstract void mv(String oldPath, String newPath);
} // class or interface

