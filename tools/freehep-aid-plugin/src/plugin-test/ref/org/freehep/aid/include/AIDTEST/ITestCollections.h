// -*- C++ -*-
// AID-GENERATED
// =========================================================================
// This class was generated by AID - Abstract Interface Definition          
// DO NOT MODIFY, but use the org.freehep.aid.Aid utility to regenerate it. 
// =========================================================================
#ifndef AIDTEST_ITESTCOLLECTIONS_H
#define AIDTEST_ITESTCOLLECTIONS_H 1

// Copyright 2002, SLAC, Stanford University, U.S.A.
// AID - Compiler Test File

#include <map>
#include <stdexcept>
#include <string>
#include <vector>

#include "AID/AIDRef.h"

namespace AIDTEST {

class ITestEmpty;

/**
 * TestInterface to test the aid compiler.
 *
 * @author Mark Donszelmann
 */
class ITestCollections : virtual public AID::AIDRef {

public: 
    /// Destructor.
    virtual ~ITestCollections() { /* nop */; }

    /**
     * Method throwing exception
     *
     * @param path path to create
     * @throws IllegalArgumentException in case of argument error
     */
    virtual void mkdir(std::vector<std::string>  dummy) throw (std::invalid_argument)  = 0;

    /**
     * Method with parameterized types
     *
     * @param map of key value pairs
     * @return collection of strings
     */
    virtual std::vector<ITestEmpty>  parameterizedMethod(std::map<std::string, std::string>  map) = 0;

    /**
     * Handle command line arguments
     *
     * @param argc number of arguments
     * @param arg array of arguments
     */
    virtual std::vector<std::string>  convertFromMain(int argc, char * * arg) = 0;
}; // class
} // namespace AIDTEST
#endif /* ifndef AIDTEST_ITESTCOLLECTIONS_H */
