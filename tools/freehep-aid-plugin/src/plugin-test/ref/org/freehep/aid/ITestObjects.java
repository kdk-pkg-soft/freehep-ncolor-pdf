// AID-GENERATED
// =========================================================================
// This class was generated by AID - Abstract Interface Definition          
// DO NOT MODIFY, but use the org.freehep.aid.Aid utility to regenerate it. 
// =========================================================================

// Copyright 2002, SLAC, Stanford University, U.S.A.
// AID - Compiler Test File
package org.freehep.aid.test;

import java.awt.Color;
import java.io.IOException;
import java.io.OutputStream;

/**
 * TestInterface to test the aid compiler.
 *
 * @author Mark Donszelmann
 */
public interface ITestObjects {

    /**
     * return string method
     *
     * @return name
     */
    public String returnObject();

    /**
     * return string reference method
     *
     * @return name
     */
    public String returnReference();

    /**
     * return string pointer method
     *
     * @return name
     */
    public String returnPointer();

    /**
     * return Color method
     *
     * @return name
     */
    public Color returnColor();

    /**
     * return const string reference method
     *
     * @return name
     */
    public String returnConstReference();

    /**
     * return const string reference const method
     *
     * @return name
     */
    public String returnConstReferenceConst();

    /**
     * return const string reference method throwing exceptions
     *
     * @throws IllegalArgumentException in case of argument error
     * @throws IOException in case of IO error
     * @return name
     */
    public String returnConstReferenceThrows() throws IOException, IllegalArgumentException;

    /**
     * return const string reference const method throwing exceptions
     *
     * @throws IllegalArgumentException in case of argument error
     * @return name of something
     */
    public String returnConstReferenceConstThrows() throws IllegalArgumentException;

    /**
     * Method with 1 parameter
     *
     * @param path path to find
     * @return name
     */
    public String find(String path);

    /**
     * Method with 1 parameter
     *
     * @param path path to find
     * @return name
     */
    public ITestInterface find(Color color);

    /**
     * Method with 1 default parameter
     *
     * @return true on succes
     */
    public boolean cd();
    /**
     * Method with 1 default parameter
     *
     * @param path to change directory to
     * @return true on succes
     */
    public boolean cd(String path);

    /**
     * Method with 3 default parameters and special init values
     *
     */
    public void ls();
    /**
     * Method with 3 default parameters and special init values
     *
     * @param path path to list
     */
    public void ls(String path);
    /**
     * Method with 3 default parameters and special init values
     *
     * @param path path to list
     * @param recursive list files recursively
     */
    public void ls(String path, boolean recursive);
    /**
     * Method with 3 default parameters and special init values
     *
     * @param path path to list
     * @param recursive list files recursively
     * @param os output stream to list file to
     */
    public void ls(String path, boolean recursive, OutputStream os);

    /**
     * Method throwing exception
     *
     * @param path path to create
     * @throws IllegalArgumentException in case of argument error
     */
    public void mkdir(String path) throws IllegalArgumentException;

    /**
     * Method with 2 parameters of which 1 default.
     *
     * @param oldPath old path for file
     */
    public void mv(String oldPath);
    /**
     * Method with 2 parameters of which 1 default.
     *
     * @param oldPath old path for file
     * @param newPath new path for file
     */
    public void mv(String oldPath, String newPath);
} // class or interface

