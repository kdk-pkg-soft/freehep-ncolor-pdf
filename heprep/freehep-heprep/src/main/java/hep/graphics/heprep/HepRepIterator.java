// AID-GENERATED
// =========================================================================
// This class was generated by AID - Abstract Interface Definition          
// DO NOT MODIFY, but use the org.freehep.aid.Aid utility to regenerate it. 
// =========================================================================

// Copyright 2000-2006, FreeHEP.
package hep.graphics.heprep;

import java.util.Iterator;

/**
 * HepRepIterator interface.
 *
 * @author Mark Donszelmann
 */
public interface HepRepIterator extends Iterator {

    /**
     * Signals if there is a next instance to iterate to.
     *
     * @return true if next() can be called.
     */
    public boolean hasNext();

    /**
     * Returns next instance.
     *
     * @return next HepRepInstance.
     */
    public HepRepInstance nextInstance();

    /**
     * Adds a listener to be informed about attribute changes while iterating.
     *
     * @param name attribute name to register a listener for; use null to listen to all attributes
     * @param listener to be added.
     */
    public void addHepRepAttributeListener(String name, HepRepAttributeListener listener);

    /**
     * Removes a listener.
     *
     * @param name attribute name to unregister for, use null for the "all attribute" listener
     * @param listener to be removed.
     */
    public void removeHepRepAttributeListener(String name, HepRepAttributeListener listener);

    /**
     * Adds a listener to be informed about attribute changes while iterating.
     *
     * @param listener to be added.
     */
    public void addHepRepFrameListener(HepRepFrameListener listener);

    /**
     * Removes a listener.
     *
     * @param listener to be removed.
     */
    public void removeHepRepFrameListener(HepRepFrameListener listener);

    /**
     * Returns true if the current instance, just delivered by nextInstance(), is to be drawn as a frame.
     * @return draw current instance as a frame
     */
    public boolean drawAsFrame();
} // class or interface

